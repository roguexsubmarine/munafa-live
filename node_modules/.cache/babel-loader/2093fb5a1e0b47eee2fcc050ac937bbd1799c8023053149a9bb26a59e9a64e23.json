{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst Timer = () => {\n  _s();\n  const [remainingTime, setRemainingTime] = useState('');\n  useEffect(() => {\n    // Set the target date to 3:30 PM on October 6th\n    const targetDate = new Date('2024-10-06T16:00:00');\n    const updateTimer = () => {\n      const currentDate = new Date();\n      const difference = targetDate - currentDate; // Time difference in milliseconds\n\n      if (difference > 0) {\n        // Convert milliseconds into HH:MM:SS format\n        const hours = Math.floor(difference / (1000 * 60 * 60));\n        const minutes = Math.floor(difference % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(difference % (1000 * 60) / 1000);\n        const timeString = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n        setRemainingTime(timeString); // Update the state with the formatted string\n      } else {\n        setRemainingTime('00:00:00'); // If the countdown has finished\n      }\n    };\n\n    // Initial call to set the timer\n    updateTimer();\n\n    // Update every second\n    const interval = setInterval(updateTimer, 1000);\n\n    // Cleanup interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n  return remainingTime; // Render the remaining time\n};\n_s(Timer, \"C8ypRsg+iwrJHczJOd7Dd65tkzk=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useState","useEffect","Timer","_s","remainingTime","setRemainingTime","targetDate","Date","updateTimer","currentDate","difference","hours","Math","floor","minutes","seconds","timeString","String","padStart","interval","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["/home/submarine/psf/munafa-live/src/components/timer.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Timer = () => {\n  const [remainingTime, setRemainingTime] = useState('');\n\n  useEffect(() => {\n    // Set the target date to 3:30 PM on October 6th\n    const targetDate = new Date('2024-10-06T16:00:00');\n\n    const updateTimer = () => {\n      const currentDate = new Date();\n      const difference = targetDate - currentDate; // Time difference in milliseconds\n\n      if (difference > 0) {\n        // Convert milliseconds into HH:MM:SS format\n        const hours = Math.floor(difference / (1000 * 60 * 60));\n        const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((difference % (1000 * 60)) / 1000);\n\n        const timeString = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n\n        setRemainingTime(timeString);  // Update the state with the formatted string\n      } else {\n        setRemainingTime('00:00:00'); // If the countdown has finished\n      }\n    };\n\n    // Initial call to set the timer\n    updateTimer();\n\n    // Update every second\n    const interval = setInterval(updateTimer, 1000);\n\n    // Cleanup interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n\n  return remainingTime // Render the remaining time\n};\n\nexport default Timer;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMK,UAAU,GAAG,IAAIC,IAAI,CAAC,qBAAqB,CAAC;IAElD,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,WAAW,GAAG,IAAIF,IAAI,CAAC,CAAC;MAC9B,MAAMG,UAAU,GAAGJ,UAAU,GAAGG,WAAW,CAAC,CAAC;;MAE7C,IAAIC,UAAU,GAAG,CAAC,EAAE;QAClB;QACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACvD,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;QACzE,MAAMK,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEH,UAAU,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC;QAE7D,MAAMM,UAAU,GAAG,GAAGC,MAAM,CAACN,KAAK,CAAC,CAACO,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACH,OAAO,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;QAE9Hb,gBAAgB,CAACW,UAAU,CAAC,CAAC,CAAE;MACjC,CAAC,MAAM;QACLX,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;MAChC;IACF,CAAC;;IAED;IACAG,WAAW,CAAC,CAAC;;IAEb;IACA,MAAMW,QAAQ,GAAGC,WAAW,CAACZ,WAAW,EAAE,IAAI,CAAC;;IAE/C;IACA,OAAO,MAAMa,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOf,aAAa,EAAC;AACvB,CAAC;AAACD,EAAA,CApCID,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}